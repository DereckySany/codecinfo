import java.util.regex.Matcher
import java.util.regex.Pattern

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.parseus.codecinfo"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 15
        versionName "1.11.0"
        resConfigs "en"

        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            versionNameSuffix "-dev"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        if (isFullDebugVariant()) {
            variant.mergedFlavor.manifestPlaceholders = [appClass:"androidx.multidex.MultiDexApplication"]
        } else {
            variant.mergedFlavor.manifestPlaceholders = [appClass:"android.app.Application"]
        }
    }

    flavorDimensions "app"

    productFlavors {
        full {
            dimension "app"
            multiDexEnabled isFullDebugVariant()
        }

        openSource {
            dimension "app"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        exclude 'kotlin/**'
        exclude '**/*.kotlin_metadata'
        exclude 'META-INF/*.kotlin_module'
        exclude 'META-INF/*.version'
    }
}

configurations {
    fullDebugImplementation {}
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.leanback:leanback:1.1.0-alpha04'
    implementation 'androidx.leanback:leanback-preference:1.1.0-alpha04'
    implementation 'androidx.preference:preference:1.1.1'

    implementation 'com.google.android.material:material:1.2.1'

    implementation 'com.github.ditacristianionut:AppInfoBadge:1.3'

    fullDebugImplementation 'androidx.multidex:multidex:2.0.1'

    fullImplementation fileTree(include: ['*.jar'], dir: 'libs')
    fullImplementation 'com.google.android.play:core:1.8.0'
    fullImplementation ('com.google.android.play:core-ktx:1.8.1') {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk7'
    }
}

def isFullDebugVariant() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    Pattern pattern

    if (tskReqStr.contains("assemble"))
        pattern = Pattern.compile("assemble(\\w+)(Release|Debug)")
    else
        pattern = Pattern.compile("generate(\\w+)(Release|Debug)")

    Matcher matcher = pattern.matcher(tskReqStr)

    if (matcher.find()){
        return matcher.group(1).toLowerCase() == "full" && matcher.group(2).toLowerCase() == "debug"
    }else{
        return false
    }
}